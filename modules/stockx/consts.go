package stockx

const (
	homepage      = "https://stockx.com/"
	apiEndpoint   = "https://stockx.com/api/p/e"
	requestBody   = `{"query":"query Browse($category: String, $filters: [BrowseFilterInput], $filtersVersion: Int, $query: String, $sort: BrowseSortInput, $page: BrowsePageInput, $currency: CurrencyCode, $country: String!, $market: String, $staticRanking: BrowseExperimentStaticRankingInput) {\n  browse(\n    category: $category\n    filters: $filters\n    filtersVersion: $filtersVersion\n    query: $query\n    sort: $sort\n    page: $page\n    experiments: {staticRanking: $staticRanking}\n  ) {\n    suggestions {\n      isCuratedPage\n      relatedPages {\n        title\n        url\n      }\n      locales\n    }\n    results {\n      edges {\n        objectId\n        node {\n          ... on Product {\n            ...BrowseProductDetailsFragment\n            ...FavoriteProductFragment\n            ...ProductTraitsFragment\n            ...FavoriteVariantsFragment\n            market(currencyCode: $currency) {\n              ...MarketFragment\n            }\n          }\n          ... on Variant {\n            id\n            ...FavoriteVariantFragment\n            product {\n              ...BrowseProductDetailsFragment\n              ...FavoriteProductFragment\n              ...FavoriteVariantsFragment\n              traits(filterTypes: [RELEASE_DATE, RETAIL_PRICE]) {\n                name\n                value\n              }\n            }\n            market(currencyCode: $currency) {\n              ...MarketFragment\n            }\n            traits {\n              size\n            }\n          }\n        }\n      }\n      pageInfo {\n        limit\n        page\n        pageCount\n        queryId\n        queryIndex\n        total\n      }\n    }\n    query\n  }\n}\n\nfragment FavoriteProductFragment on Product {\n  favorite\n}\n\nfragment FavoriteVariantFragment on Variant {\n  favorite\n}\n\nfragment FavoriteVariantsFragment on Product {\n  variants {\n    id\n    hidden\n    favorite\n    traits {\n      size\n    }\n  }\n}\n\nfragment ProductTraitsFragment on Product {\n  productTraits: traits(filterTypes: [RELEASE_DATE, RETAIL_PRICE]) {\n    name\n    value\n  }\n}\n\nfragment MarketFragment on Market {\n  currencyCode\n  bidAskData(market: $market, country: $country) {\n    lowestAsk\n    highestBid\n    lastHighestBidTime\n    lastLowestAskTime\n  }\n  state(country: $country) {\n    numberOfCustodialAsks\n  }\n  salesInformation {\n    lastSale\n    lastSaleDate\n    salesThisPeriod\n    salesLastPeriod\n    changeValue\n    changePercentage\n    volatility\n    pricePremium\n  }\n  deadStock {\n    sold\n    averagePrice\n  }\n  statistics {\n    last90Days {\n      averagePrice\n    }\n  }\n}\n\nfragment BrowseProductDetailsFragment on Product {\n  id\n  name\n  urlKey\n  title\n  brand\n  description\n  model\n  condition\n  productCategory\n  listingType\n  gender\n  browseVerticals\n  media {\n    thumbUrl\n    smallImageUrl\n  }\n}","variables":{"query":"%s","category":"","filters":[{"id":"_search","selectedValues":["%s"]},{"id":"dataType","selectedValues":["product"]}],"filtersVersion":4,"sort":{"id":"featured","order":"DESC"},"page":{"index":1,"limit":40},"currency":"USD","country":"US","marketName":null,"staticRanking":{"enabled":false}},"operationName":"Browse"}`
	clientVersion = "2024.03.10.01"
)

// Required to recieve valid responses from StockX. Set as value of cookie: x-stockx-device-id
var deviceID string
